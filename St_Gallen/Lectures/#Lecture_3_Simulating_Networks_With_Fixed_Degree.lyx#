#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{graphicx}
\usepackage{url}
\usepackage{pdflscape}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams-bytype
theorems-ams-extended-bytype
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
Econometrics of Networks
\end_layout

\begin_layout Right Header
St.
 Gallen, 9/26 to 10/3, 2016
\end_layout

\begin_layout Right Footer
Â© Bryan S.
 Graham 2015
\end_layout

\begin_layout Title
Lecture 4: Simulating Social Networks
\end_layout

\begin_layout Author
Bryan S.
 Graham, UC - Berkeley & NBER
\end_layout

\begin_layout Standard
Consider a network with adjacency matrix 
\begin_inset Formula $\mathbf{D}=\mathbf{d}$
\end_inset

 and corresponding degree sequence 
\begin_inset Formula $\mathbf{D}_{+}\overset{def}{=}\left(D_{1+},\ldots,D_{N+}\right)=\left(d_{1+},\ldots,d_{N+}\right)\overset{def}{=}\mathbf{d}_{+}$
\end_inset

.
 Let 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}$
\end_inset

 denote the set of all undirected 
\begin_inset Formula $N\times N$
\end_inset

 adjacency matrices with degree counts equal to 
\begin_inset Formula $\mathbf{d}_{+}.$
\end_inset

 This note describes an algorithm for sampling uniformly from the set 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}$
\end_inset

.
\end_layout

\begin_layout Standard
Sampling uniformly from 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}$
\end_inset

 has a number of uses.
 First, as we will see later, it facilitates conditional inference on, and
 conditional estimation of, certain models of network formation.
 Second, in some settings the researcher may only observe agents' degree
 and not their actual links.
 For example a researcher may know how many friends an individual has, but
 not who they are.
 In such cases, properties of the 
\emph on
class
\emph default
 of networks consistent with the available degree information may be of
 interest.
\end_layout

\begin_layout Standard
A concrete example is helpful.
 Let 
\begin_inset Formula $f\left(\mathbf{D}\right)$
\end_inset

 be some function of the adjacency matrix, say its transitivity index.
 Among all undirected networks with degree sequences coinciding with 
\begin_inset Formula $\mathbf{D}$
\end_inset

's what fraction have a transitivity index less than the one observed in
 the network in hand? Let 
\begin_inset Formula $\left|\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}\right|$
\end_inset

 denote the size, or cardinality, of 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}$
\end_inset

.
 We seek to evaluate
\begin_inset Formula 
\begin{equation}
\Pr\left(f\left(\mathbf{D}\right)\leq c\right)=\frac{\sum_{\mathbf{v}\in\mathbb{D}_{\mathbf{N,\mathbf{d}_{+}}}}\mathbf{1}\left(f\left(\mathbf{v}\right)\leq c\right)}{\left|\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}\right|}.\label{eq:target_importance_sample_obj}
\end{equation}

\end_inset

Direction enumeration of all the elements of 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}$
\end_inset

 is generally not feasible.
 Even for networks that includes as few as 10 agents, this set may have
 millions of elements.
 We therefore require a method of sampling from 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}$
\end_inset

 uniformly and also estimating its size.
 
\end_layout

\begin_layout Standard
Two complications arise.
 First, it is not straightforward to construct a random draw from 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}$
\end_inset

.
 Second, we must draw uniformly from this set.
 Fortunately the first challenge is solvable using ideas from the discrete
 math literature.
 To ensure our draws are uniform we use importance sampling (e.g., Owen, 2013).
\end_layout

\begin_layout Standard
Researchers in graph theory and discrete math have studied the construction
 of graphs with fixed degrees and, in particular, provided conditions for
 checking whether a particular degree sequence is graphical (e.g., Sierksma
 and Hoogeveen, 1991).
 We say that 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 is 
\series bold
graphical
\series default
 if there is feasible undirected network with degree sequence 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

.
 Not all integer sequences are graphical.
 For example, there is no feasible undirected network of three agents with
 degree sequence 
\begin_inset Formula $\mathbf{D}_{+}=\left(3,2,1\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Recently, Del Genio, Kim, Toroczkai and Bassler (2010), Blitzstein and Diaconis
 (2011), Zhang and Chen (2012) and others have constructed (reasonably)
 efficient procedures for sampling uniformly from the set 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}$
\end_inset

.
 In this note I outline the importance sampling algorithm of Blitzstein
 and Diaconis (2011).
\begin_inset Foot
status open

\begin_layout Plain Layout
The work of Del Genio, Kim, Toroczkai and Bassler (2010) and Blitzstein
 and Diaconis (2011) was evidently undertaken independently.
 The method of Zhang and Chen (2012) improves upon their algorithms.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Determining whether a candidate degree sequence is graphical
\end_layout

\begin_layout Standard
A sequential network construction algorithm begins with a matrix of zeros
 and sequentially adds links to it until its rows and columns sum to the
 desired degree sequence.
 Unfortunately, unless the links are added appropriately, it is easy to
 get 
\begin_inset Quotes eld
\end_inset

stuck
\begin_inset Quotes erd
\end_inset

 (in the sense that a certain point in the process it becomes impossible
 to reach a graph with the desired degree and the researcher must restart
 the process (e.g., Snijders, 1991)).
\end_layout

\begin_layout Standard
Blitzstein and Diaconis (2011) propose an algorithm that is 
\emph on
guaranteed
\emph default
 to produce a matrix from the set 
\begin_inset Formula $\mathbb{D}_{\mathbf{\mathbf{d}_{+}},N}$
\end_inset

.
 A key feature of this algorithm is cleverly using checks for whether an
 integer sequence is graphic when adding links.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\mathbf{D}_{+}=\left(D_{1+},\ldots,D_{N+}\right)$
\end_inset

 be a sequence of candidate degrees for each of 
\begin_inset Formula $N$
\end_inset

 agents in a network.
 Without loss of generality assume that the elements of 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 are arranged in descending order so that 
\begin_inset Formula $D_{1+}\geq D_{2+}\geq\cdots\geq D_{N+}$
\end_inset

.
 In a paper published in Hungarian, Erdos and Gallai (1961) showed 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 is graphical if and only if 
\begin_inset Formula $\sum_{i=1}^{N}D_{i+}$
\end_inset

 is even and
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\begin_inset Formula 
\[
\sum_{i=1}^{k}D_{i+}\leq k\left(k-1\right)+\sum_{i=k+1}^{N}\min\left(k,D_{i+}\right)\,\,\mbox{for each}\,\,k\in\left\{ 1,\ldots,N\right\} .
\]

\end_inset


\end_layout

\begin_layout Standard
To show necessity of the condition observe that for any set 
\begin_inset Formula $S$
\end_inset

 of 
\begin_inset Formula $k$
\end_inset

 agents in the network there can be at most 
\begin_inset Formula $\tbinom{k}{2}=\frac{1}{2}k\left(k-1\right)$
\end_inset

 links between them.
 For the remaining 
\begin_inset Formula $N-k$
\end_inset

 agents with 
\begin_inset Formula $i\notin S$
\end_inset

 there can be at most 
\begin_inset Formula $\min\left(k,D_{i+}\right)$
\end_inset

 links from 
\begin_inset Formula $i$
\end_inset

 to agents in 
\begin_inset Formula $S$
\end_inset

.
\end_layout

\begin_layout Standard
The study of graphic integer sequences has a long history in discrete math.
 Sierksma and Hoogeveen (1991) summarize several criteria that can be used
 to check whether 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 is is graphical.
 Blitzstein and Diaconis (2011) base their sampling algorithm on a simple
 recursive test for whether 
\begin_inset Formula $D_{+}$
\end_inset

 is graphical due to Havel (1955) and Hakimi (1962).
 
\end_layout

\begin_layout Theorem
(
\bar under
Havel-Hakimi
\bar default
)
\begin_inset CommandInset label
LatexCommand label
name "thm:Havel_Hakimi"

\end_inset

 Let 
\begin_inset Formula $D_{i+}>0$
\end_inset

, if 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 does not have at least 
\begin_inset Formula $D_{i+}$
\end_inset

 positive entries other than 
\begin_inset Formula $i$
\end_inset

 it is not graphical.
 Assume this condition holds.
 Let 
\begin_inset Formula $\mathbf{\tilde{D}}_{+}$
\end_inset

 be a degree sequence of length 
\begin_inset Formula $N-1$
\end_inset

 obtained
\emph on
 
\shape up
by
\begin_inset Newline newline
\end_inset


\begin_inset space \qquad{}
\end_inset

[i]
\begin_inset space \quad{}
\end_inset

deleting the 
\begin_inset Formula $i^{th}$
\end_inset

 entry of 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 and
\begin_inset Newline newline
\end_inset


\begin_inset space \qquad{}
\end_inset

[ii]
\begin_inset space \quad{}
\end_inset


\shape default
\emph default
subtracting 1 from each of the 
\begin_inset Formula $D_{i+}$
\end_inset

 highest elements in 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 (aside from the 
\begin_inset Formula $i^{th}$
\end_inset

 one).
\shape up

\begin_inset Newline newline
\end_inset


\emph on

\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 is graphical if and only if 
\begin_inset Formula $\mathbf{\tilde{D}}_{+}$
\end_inset

 is graphical.
 If 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 is graphical, then it has a realization where agent 
\begin_inset Formula $i$
\end_inset

 is connected to any of the 
\begin_inset Formula $D_{i+}$
\end_inset

 highest degree agents (other than 
\begin_inset Formula $i$
\end_inset

).
\end_layout

\begin_layout Proof
See Blitzstein and Diaconis (2011).
\end_layout

\begin_layout Standard
Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Havel_Hakimi"

\end_inset

 is suggestive of a sequential approach to building an undirected network
 with degree sequence 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

.
 The procedure begins with a target degree sequence 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

.
 It starts by choosing a link partner for the lowest degree agent (with
 at least one link).
 It chooses a partner for this agent from among those with higher degree.
 A one is then subtracted from the lowest degree agent and her chosen partner's
 degrees.
 This procedure continues until the
\series bold
 residual degree sequence
\series default
 (the sequence of links that remain to be chosen for each agent) is zero.
\end_layout

\begin_layout Standard
To describe the method proposed Blitzstein and Diaconis (2011) we require
 some additional notation.
 Let 
\begin_inset Formula $\left(\oplus_{i_{1},\ldots,i_{k}}\mathbf{D}_{+}\right)$
\end_inset

 be the vector obtained by adding a one to the 
\begin_inset Formula $i_{1},\ldots,i_{k}$
\end_inset

 elements of 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

:
\begin_inset Formula 
\[
\left(\oplus_{i_{1},\ldots,i_{k}}\mathbf{D}_{+}\right)_{j}=\left\{ \begin{array}{ll}
D_{j+}+1 & \mbox{for}\,j\in\left\{ i_{1},\ldots,i_{k}\right\} \\
D_{j+} & \mbox{otherwise}
\end{array}\right.
\]

\end_inset

Let 
\begin_inset Formula $\left(\ominus_{i_{1},\ldots,i_{k}}\mathbf{D}_{+}\right)$
\end_inset

 be the vector obtained by subtracting one from the 
\begin_inset Formula $i_{1},\ldots,i_{k}$
\end_inset

 elements of 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

:
\begin_inset Formula 
\[
\left(\ominus_{i_{1},\ldots,i_{k}}\mathbf{D}_{+}\right)_{j}=\left\{ \begin{array}{ll}
D_{j+}-1 & \mbox{for}\,j\in\left\{ i_{1},\ldots,i_{k}\right\} \\
D_{j+} & \mbox{otherwise}
\end{array}\right.
\]

\end_inset


\end_layout

\begin_layout Algorithm
\begin_inset CommandInset label
LatexCommand label
name "algorithm:Blizstein_Diaconis"

\end_inset

(Blitzstein and Diaconis) A sequential algorithm for constructing a random
 graph with degree sequence 
\begin_inset Formula $\mathbf{D}_{+}=\left(D_{1+},\ldots,D_{N+}\right)'$
\end_inset

 is
\end_layout

\begin_layout Enumerate
Let 
\series bold

\begin_inset Formula $\mathbf{G}$
\end_inset

 
\series default
be an empty adjacency matrix.
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $\mathbf{D}_{+}=\mathbf{0}$
\end_inset

 terminate with output 
\begin_inset Formula $\mathbf{G}$
\end_inset


\end_layout

\begin_layout Enumerate
Choose the agent 
\begin_inset Formula $i$
\end_inset

 with minimal positive degree 
\begin_inset Formula $D_{i+}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Construct a list of candidate partners 
\begin_inset Formula $J=\left\{ j\neq i\,:\,\mathbf{G}_{ij}=\mathbf{G}_{ji}=0\,\mbox{and\,}\ominus_{i,j}\mathbf{D}_{+}\,\mbox{graphical}\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Pick a partner 
\begin_inset Formula $j\in J$
\end_inset

 with probability proportional to its degree in 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Set 
\begin_inset Formula $\mathbf{G}_{ij}=\mathbf{G}_{ji}=1$
\end_inset

 and update 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 to 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\ominus_{i,j}\mathbf{D}_{+}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Repeat steps 4 to 6 until the degree of agent 
\begin_inset Formula $i$
\end_inset

 is zero.
\end_layout

\begin_layout Enumerate
Return to step 2.
\end_layout

\begin_layout Standard
The input for Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "algorithm:Blizstein_Diaconis"

\end_inset

 is the target degree sequence 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 and the output is an undirected adjacency matrix 
\begin_inset Formula $\mathbf{G}$
\end_inset

 with 
\begin_inset Formula $\mathbf{G}'\iota=\mathbf{D}_{+}$
\end_inset

.
 
\end_layout

\begin_layout Standard
An example is:
\begin_inset Formula 
\[
\left(3,2,2,2,1\right)\rightarrow\left(3,1,2,2,0\right)\rightarrow\left(2,0,2,2,0\right)\rightarrow\left(1,0,2,1,0\right)\rightarrow\left(0,0,1,1,0\right)\rightarrow\left(0,0,0,0,0\right)
\]

\end_inset


\end_layout

\begin_layout Subsubsection*
Importance sampling
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\mathcal{Y}_{N,\mathbf{d}_{+}}$
\end_inset

 denote the set of all possible sequences of links outputted by Algorithm
 
\begin_inset CommandInset ref
LatexCommand ref
reference "algorithm:Blizstein_Diaconis"

\end_inset

 given input 
\begin_inset Formula $\mathbf{D}_{+}=\mathbf{d}_{+}$
\end_inset

.
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Let 
\begin_inset Formula $\mathcal{G}\left(Y\right)$
\end_inset

 be the adjacency matrix induced by link sequence 
\begin_inset Formula $Y$
\end_inset

.

\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 Let 
\begin_inset Formula $Y$
\end_inset

 and 
\begin_inset Formula $Y'$
\end_inset

 be two different sequences produced by the algorithm.
 These sequences are equivalent if their 
\begin_inset Quotes eld
\end_inset

end point
\begin_inset Quotes erd
\end_inset

 adjacency matrices coincide (i.e., if 
\begin_inset Formula $\mathcal{G}\left(Y\right)=\mathcal{G}\left(Y'\right)$
\end_inset

).
 We can partition 
\begin_inset Formula $\mathcal{Y}_{N,\mathbf{d}_{+}}$
\end_inset

 into a set of equivalence classes, the number of such classes coincides
 with the number of feasible networks with degree distribution 
\begin_inset Formula $\mathbf{D}_{+}$
\end_inset

 (i.e., with the cardinality of 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{\mathbf{d}_{+}}}$
\end_inset

).
 Let 
\begin_inset Formula $c\left(Y\right)$
\end_inset

 denote the number of possible link sequences produced by Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "algorithm:Blizstein_Diaconis"

\end_inset

 that produce 
\begin_inset Formula $Y$
\end_inset

's end point adjacency matrix (i.e., the number of different ways in which
 Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "algorithm:Blizstein_Diaconis"

\end_inset

 can generate a given adjacency matrix).
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $i_{1},i_{2},\ldots,i_{M}$
\end_inset

 be the sequence of agents chosen in step 3 of Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "algorithm:Blizstein_Diaconis"

\end_inset

 in which 
\begin_inset Formula $Y$
\end_inset

 is the output.
 Let 
\begin_inset Formula $a_{1},\ldots,a_{m}$
\end_inset

 be the degree sequences of 
\begin_inset Formula $i_{1},\ldots,i_{M}$
\end_inset

 at the time when each agent was first selected in step 3, then
\begin_inset Formula 
\[
c\left(Y\right)=\prod_{k=1}^{M}a_{k}!
\]

\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\sigma\left(Y\right)$
\end_inset

 be the probability that Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "algorithm:Blizstein_Diaconis"

\end_inset

 produces link sequence 
\begin_inset Formula $Y$
\end_inset

.
 Note that 
\begin_inset Formula $\sigma\left(Y\right)$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 is easy to compute.
 Each time the algorithm choose a link in step 5 record the probability
 with which it was chosen (i.e., the residual degree of the chosen agent divided
 by the sum of the residual degrees of all agents in the choice set).
 The product of all these probabilities equals 
\begin_inset Formula $\sigma\left(Y\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $f\left(\mathbf{G}\right)$
\end_inset

 be some function of the adjacency matrix and consider the expected value
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula 
\begin{eqnarray*}
\mathbb{E}\left[\frac{\pi\left(\mathcal{G}\left(Y\right)\right)}{c\left(Y\right)\sigma\left(Y\right)}f\left(\mathcal{G}\left(Y\right)\right)\right] & = & \sum_{y\in\mathbb{Y}_{N,\mathbf{d}}}\frac{\pi\left(\mathcal{G}\left(y\right)\right)}{c\left(y\right)\sigma\left(y\right)}f\left(\mathcal{G}\left(y\right)\right)\sigma\left(y\right)\\
 & = & \sum_{y\in Y_{N,\mathbf{d}}}\frac{\pi\left(\mathcal{G}\left(y\right)\right)}{c\left(y\right)}f\left(\mathcal{G}\left(y\right)\right)\\
 & = & \sum_{\mathbf{g}\in\mathbb{D}_{N,\mathbf{d}}}\sum_{\left\{ y:G\left(y\right)=\mathbf{g}\right\} }\frac{\pi\left(\mathbf{g}\right)}{c\left(y\right)}f\left(\mathbf{g}\right)\\
 & = & \sum_{\mathbf{g}\in\mathbb{D}_{N,\mathbf{d}}}\pi\left(\mathbf{g}\right)f\left(\mathbf{g}\right)\\
 & = & \mathbb{E}_{\pi}\left[f\left(\mathbf{G}\right)\right].
\end{eqnarray*}

\end_inset

The ratio 
\begin_inset Formula $\pi\left(\mathbf{G}\left(Y_{t}\right)\right)/c\left(Y_{t}\right)\sigma\left(Y_{t}\right)$
\end_inset

 is called the likelihood ratio or the 
\family default
\series bold
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
importance weight.
 
\series default
If we set 
\begin_inset Formula $f\left(\mathbf{G}\right)$
\end_inset

 to the constant function we see that the expected value of this weight
 is one.
 This suggests the analog estimator
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\begin_inset Formula 
\[
\hat{\mu}_{f\left(\mathbf{G}\right)}=\left[\sum_{t=1}^{T}\frac{\pi\left(\mathbf{G}\left(Y_{t}\right)\right)}{c\left(Y_{t}\right)\sigma\left(Y_{t}\right)}\right]^{-1}\times\sum_{t=1}^{T}\frac{\pi\left(\mathbf{G}\left(Y_{t}\right)\right)}{c\left(Y_{t}\right)\sigma\left(Y_{t}\right)}f\left(\mathbf{G}\left(Y_{t}\right)\right).
\]

\end_inset

Setting 
\begin_inset Formula $\pi\left(\mathbf{G}\right)=1$
\end_inset

 we get a procedure for estimating the expectation of 
\begin_inset Formula $f\left(\mathbf{G}\right)$
\end_inset

 when 
\family default
\series bold
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $\mathbf{G}$
\end_inset

 
\series default
is drawn uniformly from 
\begin_inset Formula $\mathbb{D}_{N,\mathbf{d}_{+}}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "Networks_References"
options "apalike"

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

Snijders, Tom A.
 B.
 (1991).
 
\begin_inset Quotes eld
\end_inset

Enumeration and simulation methods for 0-1 matrices with given marginals,
\begin_inset Quotes erd
\end_inset

 
\emph on
Psychometrika
\emph default
 56 (3): 397 - 417.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-13"

\end_inset

Zhang, Jingfei and Yuguo Chen.
 (2013).
 
\begin_inset Quotes eld
\end_inset

Sampling for conditional inference on network data,
\begin_inset Quotes erd
\end_inset

 
\emph on
Journal of the American Statistical Association
\emph default
 108 (504): 1295 - 1307.
\end_layout

\end_body
\end_document
